{"version":3,"file":"static/js/20.c0eee69b.chunk.js","mappings":"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","sources":["webpack://my-app/./src/pages/Busket/Busket.module.css?5d1a","webpack://my-app/./src/pages/Busket/OrderSuccessModal/OrderSuccessModal.module.css?447d","pages/Busket/OrderSuccessModal/OrderSuccessModal.tsx","pages/Busket/Busket.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"busketContainer\":\"Busket_busketContainer__Mbrhv\",\"busketDescription\":\"Busket_busketDescription__93G1Q\",\"itemBorder\":\"Busket_itemBorder__JRyrO\",\"tovar\":\"Busket_tovar__v9Bwc\",\"tovar1\":\"Busket_tovar1__4FyVv\",\"itogo\":\"Busket_itogo__OZfo+\",\"cena\":\"Busket_cena__m2lmY\",\"colvo\":\"Busket_colvo__x254F\",\"quantity\":\"Busket_quantity__4Fw0I\",\"products\":\"Busket_products__LnhlC\",\"threeDescription\":\"Busket_threeDescription__Mn0Jm\",\"titleDeck\":\"Busket_titleDeck__Pc5-0\",\"imageContainer\":\"Busket_imageContainer__wo4aO\",\"descriptionContainer\":\"Busket_descriptionContainer__C0jT+\",\"descriptionMini\":\"Busket_descriptionMini__h-X-D\",\"generalPriceAndButtons\":\"Busket_generalPriceAndButtons__eU0le\",\"generalPrice\":\"Busket_generalPrice__LzVRl\",\"buttonsContainer\":\"Busket_buttonsContainer__uXB-I\",\"countButtonsMobile\":\"Busket_countButtonsMobile__P7b2r\",\"titleAndCountMobile\":\"Busket_titleAndCountMobile__EIBV2\",\"generalPriceAndButtonsMobile\":\"Busket_generalPriceAndButtonsMobile__-IfQD\",\"generalPriceMobile\":\"Busket_generalPriceMobile__OKeR1\",\"buttonsContainerMobile\":\"Busket_buttonsContainerMobile__B0kAg\",\"button\":\"Busket_button__K1NmM\",\"disabledButton\":\"Busket_disabledButton__ydkLQ\",\"buttonPlusMinus\":\"Busket_buttonPlusMinus__x2vhI\",\"modal\":\"Busket_modal__u4V9N\",\"modalContent\":\"Busket_modalContent__XI9LA\",\"fadeIn\":\"Busket_fadeIn__ugwuB\",\"modalButtons\":\"Busket_modalButtons__EutkJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"OrderSuccessModal_modal__TYxap\",\"modalContent\":\"OrderSuccessModal_modalContent__w7mbE\",\"fadeIn\":\"OrderSuccessModal_fadeIn__+SOCA\"};","import React from 'react';\r\nimport s from './OrderSuccessModal.module.css';\r\n\r\ninterface OrderSuccessModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst OrderSuccessModal: React.FC<OrderSuccessModalProps> = ({ isOpen, onClose }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className={s.modal}>\r\n      <div className={s.modalContent}>\r\n        <h2>Заказ оформлен!</h2>\r\n        <p>Вам перезвонит наш менеджер в течение 5 минут.</p>\r\n        <button type=\"button\" className={s.button} onClick={onClose}>Закрыть</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderSuccessModal;","import React, { FC, useEffect, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Header } from \"../../shared/components/Header/Header\";\r\nimport s from \"./Busket.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../store/store\";\r\nimport {\r\n  clearCart,\r\n  incrementItem,\r\n  decrementItem,\r\n  calculateTotalPrice,\r\n  placeOrder,\r\n  OrderData,\r\n  setCart,\r\n} from \"../../store/cartSlice\";\r\nimport { Item } from \"../../shared/config/types\";\r\nimport OrderSuccessModal from \"./OrderSuccessModal/OrderSuccessModal\";\r\n\r\ntype BusketPropsType = {\r\n  cartItems: Item[];\r\n};\r\n type ItemPropsType = {\r\n  color:string;\r\ncompany:string;\r\nimg:string;\r\nnewPrice:string;\r\nprevPrice:string;\r\nquantity:number;\r\nsize:string;\r\ntitle:string;\r\ntotalPrice:number;\r\n}\r\n\r\nconst Busket: FC<BusketPropsType> = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const cartItems = useSelector((state: RootState) => state.cart.items);\r\n  const generalPrice = useSelector((state: RootState) => state.cart.totalPrice);\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const [nameError, setNameError] = useState(false);\r\n  const [phoneError, setPhoneError] = useState(false);\r\n\r\n  const [isOrderSuccessModalOpen, setIsOrderSuccessModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(calculateTotalPrice());\r\n  }, [cartItems, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const cartData = localStorage.getItem(\"cart\");\r\n    if (cartData) {\r\n      const cart = JSON.parse(cartData);\r\n      dispatch(setCart(cart));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleClearCart = () => {\r\n    dispatch(clearCart());\r\n  };\r\n\r\n  const handlePlusOne = (item: Item) => {\r\n    dispatch(incrementItem(item.title));\r\n  };\r\n\r\n  const handleMinusOne = (item: Item) => {\r\n    dispatch(decrementItem(item.title));\r\n  };\r\n\r\n  const handleOrder = async () => {\r\n    if (name === \"\" || phone === \"\") {\r\n      if (name === \"\") {\r\n        setNameError(true);\r\n      } else {\r\n        setNameError(false);\r\n      }\r\n      if (phone === \"\") {\r\n        setPhoneError(true);\r\n      } else {\r\n        setPhoneError(false);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    const orderData = {\r\n      items: cartItems,\r\n      totalPrice: generalPrice,\r\n      userEmail: userEmail,\r\n      name: name,\r\n      phone: phone,\r\n    };\r\n\r\n    try {\r\n      const response = await dispatch(placeOrder(orderData)).unwrap();\r\n      setIsOrderSuccessModalOpen(true);\r\n      handleClearCart();\r\n      setIsModalOpen(false); // Закрываем модальное окно после успешного оформления заказа\r\n      localStorage.removeItem(\"cart\"); // Удаляем данные из localStorage\r\n    } catch (error) {\r\n      console.error(\"Ошибка:\", error);\r\n      alert(\"Произошла ошибка при оформлении заказа.\");\r\n    }\r\n  };\r\n  console.log(cartItems)\r\n  return (\r\n    <>\r\n      <Header />\r\n      {isMobile ? (\r\n        <div className={s.busketContainer}>\r\n          <h1>Корзина</h1>\r\n          <div>\r\n            \r\n            {cartItems.map((item: ItemPropsType, index: number) => (\r\n              <div className={`${s.products} ${s.itemBorder}`} key={`${item.title}-${item.newPrice}-${item.img}`}>\r\n                <div className={s.tovar1}>\r\n                  <img className={s.tovar} src={item.img} alt={item.title} />\r\n                </div>\r\n                <div className={s.titleAndCountMobile}>\r\n                  <div className={s.titleDeck}>{item.title}</div>\r\n                  <div className={s.countButtonsMobile}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className={s.buttonPlusMinus}\r\n                      onClick={() => handleMinusOne(item)}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <h2 className={s.quantity}>{item.quantity}</h2>\r\n                    <button\r\n                      type=\"button\"\r\n                      className={s.buttonPlusMinus}\r\n                      onClick={() => handlePlusOne(item)}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className={s.itogo}>{item.totalPrice}byn</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className={s.generalPriceAndButtonsMobile}>\r\n            <div className={s.generalPriceMobile}>\r\n              Cумма товаров: <b>{generalPrice}byn</b>\r\n            </div>\r\n            <div className={s.buttonsContainerMobile}>\r\n              <button type=\"button\" className={s.button} onClick={handleClearCart}>\r\n                Очистить корзину\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  cartItems.length > 0\r\n                    ? s.button\r\n                    : `${s.button} ${s.disabledButton}`\r\n                }\r\n                onClick={() => setIsModalOpen(true)}\r\n                disabled={cartItems.length === 0}\r\n              >\r\n                Оформить заказ\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={s.busketContainer}>\r\n          <h1>Корзина</h1>\r\n          <div className={s.busketDescription}>\r\n            <div className={s.tovar}>Товар</div>\r\n            <div className={s.threeDescription}>\r\n              <div className={s.cena}>Цена</div>\r\n              <div className={s.colvo}>Количество</div>\r\n              <div className={s.itogo}>Итого</div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {cartItems.map((item: ItemPropsType, index: number) => (\r\n              <div className={`${s.products} ${s.itemBorder}`} key={index}>\r\n                <div className={s.tovar1}>\r\n                  <img className={s.tovar} src={item.img} alt={item.title} />\r\n                  <div className={s.titleDeck}>{item.title}</div>\r\n                </div>\r\n                <div className={s.threeDescription}>\r\n                  <div className={s.cena}>{item.newPrice}byn</div>\r\n                  <div className={s.colvo}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className={s.buttonPlusMinus}\r\n                      onClick={() => handleMinusOne(item)}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <h2 className={s.quantity}>{item.quantity}</h2>\r\n                    <button\r\n                      type=\"button\"\r\n                      className={s.buttonPlusMinus}\r\n                      onClick={() => handlePlusOne(item)}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <div className={s.itogo}>{item.totalPrice}byn</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className={s.generalPriceAndButtons}>\r\n            <div className={s.generalPrice}>\r\n              Cумма товаров: <b>{generalPrice}byn</b>\r\n            </div>\r\n            <div className={s.buttonsContainer}>\r\n              <button type=\"button\" className={s.button} onClick={handleClearCart}>\r\n                Очистить корзину\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={\r\n                  cartItems.length > 0\r\n                    ? s.button\r\n                    : `${s.button} ${s.disabledButton}`\r\n                }\r\n                onClick={() => setIsModalOpen(true)}\r\n                disabled={cartItems.length === 0}\r\n              >\r\n                Оформить заказ\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isModalOpen && (\r\n        <div className={s.modal}>\r\n          <div className={s.modalContent}>\r\n            <h2>Оформить заказ</h2>\r\n            <label>\r\n              Имя:\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                  if (e.target.value === \"\") {\r\n                    setNameError(true);\r\n                  } else {\r\n                    setNameError(false);\r\n                  }\r\n                }}\r\n              />\r\n              {nameError && (\r\n                <span style={{ color: \"red\" }}>Поле не заполнено</span>\r\n              )}\r\n            </label>\r\n            <label>\r\n              Номер телефона:\r\n              <input\r\n                type=\"text\"\r\n                value={phone}\r\n                onChange={(e) => {\r\n                  const onlyNumbers = e.target.value.replace(/[^0-9+()-]/g, \"\");\r\n                  setPhone(onlyNumbers);\r\n                  if (onlyNumbers === \"\") {\r\n                    setPhoneError(true);\r\n                  } else {\r\n                    setPhoneError(false);\r\n                  }\r\n                }}\r\n              />\r\n              {phoneError && (\r\n                <span style={{ color: \"red\" }}>Поле не заполнено</span>\r\n              )}\r\n            </label>\r\n            <div className={s.modalButtons}>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleOrder}\r\n                disabled={nameError || phoneError}\r\n                className={\r\n                  nameError || phoneError\r\n                    ? `${s.button} ${s.disabledButton}`\r\n                    : s.button\r\n                }\r\n              >\r\n                Отправить\r\n              </button>\r\n              <button type=\"button\" onClick={() => setIsModalOpen(false)}>Закрыть</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isOrderSuccessModalOpen && (\r\n      <OrderSuccessModal\r\n        isOpen={isOrderSuccessModalOpen}\r\n        onClose={() => setIsOrderSuccessModalOpen(false)}\r\n      />\r\n    )}\r\n    </>\r\n  );\r\n};\r\nexport default Busket;"],"names":["_ref","isOpen","onClose","_jsx","className","s","modal","children","_jsxs","modalContent","type","button","onClick","Busket","dispatch","useDispatch","cartItems","useSelector","state","cart","items","generalPrice","totalPrice","isMobile","useMediaQuery","query","isModalOpen","setIsModalOpen","useState","name","setName","phone","setPhone","nameError","setNameError","phoneError","setPhoneError","isOrderSuccessModalOpen","setIsOrderSuccessModalOpen","useEffect","calculateTotalPrice","cartData","localStorage","getItem","JSON","parse","setCart","handleClearCart","clearCart","handlePlusOne","item","incrementItem","title","handleMinusOne","decrementItem","console","log","_Fragment","Header","map","index","concat","src","img","alt","quantity","newPrice","length","disabled","value","onChange","e","target","style","color","onlyNumbers","replace","async","userEmail","orderData","placeOrder","unwrap","removeItem","error","alert","OrderSuccessModal"],"sourceRoot":""}