{"version":3,"file":"static/js/729.b91b1cab.chunk.js","mappings":"2IACA,SAAgB,eAAiB,iCAAiC,oBAAsB,sCAAsC,mBAAqB,qCAAqC,oBAAsB,sCAAsC,UAAY,4BAA4B,cAAgB,gCAAgC,UAAY,4BAA4B,eAAiB,iCAAiC,eAAiB,iCAAiC,kBAAoB,qC,sMCgV5e,QArSA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,KACXC,GAAOC,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,MAAMH,OACrDI,GAASH,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,MAAMC,SAEvDC,IADWC,EAAAA,EAAAA,OACML,EAAAA,EAAAA,KACpBC,GAAqBA,EAAMK,KAAKF,mBAGnCG,EAAAA,EAAAA,YAAU,KACRC,EAAYT,EAAK,GAChB,CAACA,KAEJQ,EAAAA,EAAAA,YAAU,KACRC,EAAYJ,EAA4B,GACvC,CAACA,IAEJ,MAAMK,EAAsBC,IAC1B,MAAMC,EAAQD,EAAME,OAAOD,MAC3Bd,GAASgB,EAAAA,EAAAA,IAAaF,IAER,2FAAVA,EACFd,GAASiB,EAAAA,EAAAA,IAAqBf,IACX,6GAAVY,EACTd,GAASkB,EAAAA,EAAAA,IAAqBhB,IACX,kCAAVY,EACTd,GAASmB,EAAAA,EAAAA,IAAcjB,IACJ,kCAAVY,EACTd,GAASoB,EAAAA,EAAAA,IAAclB,IACJ,kEAAVY,GACTd,GAASqB,EAAAA,EAAAA,IAAanB,GACxB,GAIKoB,EAAUX,IAAeY,EAAAA,EAAAA,UAAoBrB,IAEpDQ,EAAAA,EAAAA,YAAU,KACO,SAAXJ,GACFN,GAASwB,EAAAA,EAAAA,KACX,GACC,CAAClB,EAAQN,KAIZU,EAAAA,EAAAA,YAAU,KACRC,EAAYT,EAAK,GAChB,CAACA,IAEJ,MAAOuB,EAAkBC,IAAuBH,EAAAA,EAAAA,UAAS,IAEnDI,GAAcxB,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMwB,KAAKD,cAC3DE,GAAe1B,EAAAA,EAAAA,KAClBC,GAAqBA,EAAM0B,MAAMD,eAE9BE,GAAQ5B,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMK,KAAKsB,SACpDC,EAAeC,IAAoBV,EAAAA,EAAAA,UAAS,KAC5CW,EAAWC,IAAgBZ,EAAAA,EAAAA,UAAS,GACrCa,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,wBACjCA,EAAOC,IAAYhB,EAAAA,EAAAA,UAAS,IAE7BiB,EAAqB3B,IACzB0B,EAAS1B,EAAME,OAAOD,MAAM,EAExB2B,EAAgBnB,EAASoB,QAC5BC,IAA0E,IAA9DA,EAAQC,MAAMC,cAAcC,QAAQR,EAAMO,iBAInDE,EAAoBA,CACxBlC,EACAmC,KAEA,MAAMC,EAAQpC,EAAME,OAAOD,MAC3BmB,EAAiBgB,EAAM,EAGnBC,EAAeC,MAAMC,KACzB,IAAIC,IAAInD,EAAKoD,KAAKX,GAA0BA,EAAQM,UACpDxC,OACI8C,EAAcJ,MAAMC,KACxB,IAAIC,IAAInD,EAAKoD,KAAKX,GAA0BA,EAAQf,SACpDnB,OACI+C,EAAeL,MAAMC,KACzB,IAAIC,IAAInD,EAAKoD,KAAKX,GAA0BA,EAAQc,YACpDhD,OAyFIiD,EAnEN,SACEpC,EACAqC,EACArB,EACAN,GAEA,IAAI4B,EAAmBtC,EAqCvB,OAlCIgB,IACFsB,EAAmBnB,GAIjBkB,IACFC,EAAmBA,EAAiBlB,QAClCmB,IAAA,IAAC,SAAEC,EAAQ,MAAEb,EAAK,QAAEQ,EAAO,SAAEM,EAAQ,MAAEnB,GAAOiB,EAAA,OAC5CC,IAAaH,GACbV,IAAUU,GACVF,IAAYE,GACZI,IAAaJ,GACbf,IAAUe,CAAQ,KAKpB3B,IACF4B,EAAmBA,EAAiBlB,QACjCC,GAAYA,EAAQM,QAAUjB,KAI/BL,EAAYqC,OAAS,IACvBJ,EAAmBA,EAAiBlB,QAAQC,GAC1ChB,EAAYsC,SAAStB,EAAQf,SAG7BC,EAAamC,OAAS,IACxBJ,EAAmBA,EAAiBlB,QAAQC,GAC1Cd,EAAaoC,SAAStB,EAAQc,YAI3BG,EAAiBN,KACtBY,IAAA,IAAC,IACCC,EAAG,MACHvB,EAAK,UACLwB,EAAS,SACTL,EAAQ,KACRnC,EAAI,QACJ6B,EAAO,MACPR,GACDiB,EAAA,OACCG,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAEHH,IAAKA,EACLvB,MAAOA,EACPwB,UAAWA,EACXL,SAAUA,EACVnC,KAAMA,EACN6B,QAASA,EACTR,MAAOA,GAAM,GAAAsB,OAPL3B,EAAK,KAAA2B,OAAIR,EAAQ,KAAAQ,OAAIJ,GAQ7B,GAGR,CAEeK,CAAalD,EAAUG,EAAkBa,EAAON,GAQ/D,OANAtB,EAAAA,EAAAA,YAAU,KACJgD,GACFvB,EAAauB,EAAOM,OACtB,GACC,CAACN,KAGFe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEN,EAAAA,EAAAA,KAACO,EAAAA,EAAM,KAEPP,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAEC,kBAAkBJ,SACjCvC,GACCiC,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAEE,YAAYL,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAEG,oBAAoBN,SAAA,EACpCN,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAEI,cAAcP,UAC9BN,EAAAA,EAAAA,KAACc,EAAAA,EAAW,CAACC,MAAO7B,OAEtBc,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,CACXC,OAAQpC,EACRqC,aAAcxC,KAEhBsB,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAEI,cAAcP,UAC9BN,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CAACC,OAAQjC,UAGzBiB,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAEY,oBAAoBf,SAAA,EACpCN,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAEa,cAAchB,UAC9BN,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,KAAMnB,UACzBF,EAAAA,EAAAA,MAACsB,EAAAA,EAAW,CAACF,GAAI,CAAEG,MAAO,SAAWpE,KAAK,QAAO+C,SAAA,EAC/CN,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,GAAG,2BAA0BvB,SAAC,kEAG1CF,EAAAA,EAAAA,MAAC0B,EAAAA,EAAM,CACLC,QAAQ,2BACRF,GAAG,qBACHpF,MAAOiB,EACPA,MAAM,+DACNsE,SAAUzF,EAAmB+D,SAAA,EAE7BN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,yFAAkB6D,SAAC,4FAGnCN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,2GAAqB6D,SAAC,8GAGtCN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,gCAAW6D,SAAC,mCAC5BN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,gCAAW6D,SAAC,mCAC5BN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,gEAAa6D,SAAC,6EAKtCN,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CACTjE,MAAOA,EACPE,kBAAmBA,QAGvBiC,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAE5C,UAAUyC,SAAA,CAAEzC,EAAU,kDACxCmC,EAAAA,EAAAA,KAACmC,EAAAA,EAAQ,CAAC9C,OAAQA,UAItBe,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAE2B,cAAc9B,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAEG,oBAAoBN,SAAA,EACpCN,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAEI,cAAcP,UAC9BN,EAAAA,EAAAA,KAACc,EAAAA,EAAW,CAACC,MAAO7B,OAEtBc,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,CAACC,OAAQpC,EAAcqC,aAAcxC,KAClDsB,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAEI,cAAcP,UAC9BN,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CAACC,OAAQjC,OAEvBa,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAEa,cAAchB,UAC9BN,EAAAA,EAAAA,KAACuB,EAAAA,EAAG,CAAAjB,UACFF,EAAAA,EAAAA,MAACsB,EAAAA,EAAW,CAACF,GAAI,CAAEG,MAAO,SAAWpE,KAAK,QAAO+C,SAAA,EAC/CN,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,GAAG,2BAA0BvB,SAAC,kEAG1CF,EAAAA,EAAAA,MAAC0B,EAAAA,EAAM,CACLC,QAAQ,2BACRF,GAAG,qBACHpF,MAAOiB,EACPA,MAAM,+DACNsE,SAAUzF,EAAmB+D,SAAA,EAE7BN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,yFAAkB6D,SAAC,4FAGnCN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,2GAAqB6D,SAAC,8GAGtCN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,gCAAW6D,SAAC,mCAC5BN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,gCAAW6D,SAAC,mCAC5BN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,gEAAa6D,SAAC,gFAMxCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAE4B,mBAAmB/B,SAAA,EACnCF,EAAAA,EAAAA,MAAA,KAAGI,UAAWC,EAAE5C,UAAUyC,SAAA,CAAEzC,EAAU,kDACtCmC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CACTjE,MAAOA,EACPE,kBAAmBA,QAGvB6B,EAAAA,EAAAA,KAACmC,EAAAA,EAAQ,CAAC9C,OAAQA,aAK1BW,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,MAGb,C,kCC9UA,QAAkC,gCAAlC,EAA6E,yBAA7E,EAA6G,qBAA7G,EAA0I,sBAA1I,EAA4K,0B,cCErK,MAAMA,EAASA,KAGXlC,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAkBH,SAAA,EACrCN,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAWH,SAAC,WAC3BN,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAQ8B,KAAK,uEAAsEjC,UAC/FN,EAAAA,EAAAA,KAAA,OACEwC,MAAM,6BACNb,MAAM,KACNc,OAAO,KACPC,QAAQ,YACRC,KAAK,OAAMrC,UAEXN,EAAAA,EAAAA,KAAA,QACE4C,EAAE,gqBACFD,KAAK,eAIX3C,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAS8B,KAAM,mDAAmDjC,UAChFN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,aAEJN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,sDAEJN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,iCACJN,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAYH,SAAC,iC,kCC3BrC,SAAgB,KAAO,mBAAmB,WAAW,uBAAuB,aAAa,yBAAyB,eAAe,2BAA2B,cAAc,0BAA0B,gBAAgB,4BAA4B,YAAc,0BAA0B,aAAa,yBAAyB,MAAQ,oBAAoB,WAAW,wB,wBCcrW,MAuBA,EAvBiCd,IAA+D,IAA9D,IAAEM,EAAG,MAAEvB,EAAK,UAAEwB,EAAS,SAAEL,EAAQ,QAAEN,EAAO,MAAER,EAAK,KAAErB,GAAKiC,EACxF,OAAQQ,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAAC,UACNN,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAE,SAAA5C,OAAW3B,EAAK,KAAA2B,OAAIR,EAAQ,KAAAQ,OAAI6C,mBAAmBjD,GAAI,KAAAI,OAAId,EAAO,KAAAc,OAAItB,EAAK,KAAAsB,OAAI3C,GAAO+C,UAGhGF,EAAAA,EAAAA,MAAA,WAASI,UAAWC,EAAEuC,KAAK1C,SAAA,EACzBN,EAAAA,EAAAA,KAAA,OAAKiD,IAAKnD,EAAKoD,IAAK3E,EAAOiC,UAAWC,EAAE0C,WACpC/C,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAE2C,YAAY9C,SAAA,EAC5BN,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAE4C,UAAU/C,SAAE/B,KAE7ByB,EAAAA,EAAAA,KAAA,WAASQ,UAAWC,EAAE6C,UAAUhD,UAC9BF,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAE8C,MAAMjD,SAAA,EACtBN,EAAAA,EAAAA,KAAA,OAAAM,SAAMP,IAAgB,IAAEL,EAAS,oBAOxC,C,kCCjCP,SAAgB,IAAM,iBAAiB,YAAc,yBAAyB,SAAW,uB,cCSzF,MAiBA,EAjB8BF,IAAmC,IAAlC,kBAAErB,EAAiB,MAAEF,GAAOuB,EACzD,OACEQ,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAE+C,IAAIlD,UACpBN,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAEgD,aAAanD,UAC7BN,EAAAA,EAAAA,KAAA,SACEQ,UAAWC,EAAEiD,YACbC,KAAK,OACL3B,SAAU7D,EACV1B,MAAOwB,EACP2F,YAAY,sCAIZ,C,uICbV,MA+CA,EA/CyCpE,IAAkB,IAAjB,OAAE4B,GAAS5B,EACnD,MAAM7D,GAAWkI,EAAAA,EAAAA,MACXrG,GAAe1B,EAAAA,EAAAA,KAAaC,GAAqBA,EAAM0B,MAAMD,gBAa5DsG,EAAWC,IAAgB7G,EAAAA,EAAAA,WAAS,GAQ3C,OAPAb,EAAAA,EAAAA,YAAU,IACD,KACL0H,GAAa,GACbpI,GAASqI,EAAAA,EAAAA,GAAgB,IAAI,GAE9B,CAACrI,KAGFyE,EAAAA,EAAAA,MAACsB,EAAAA,EAAW,CAACF,GAAI,CAAEG,MAAO,SAAWpE,KAAK,QAAO+C,SAAA,EAC/CN,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,GAAG,cAAavB,SAAC,oCAC7BN,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CACLC,QAAQ,cACRF,GAAG,eACHoC,UAAQ,EACRxH,MAAOe,EACPE,MAAM,iCACNsE,SA7BoBkC,CAAC1H,EAAoCmC,KAC7D,MACEjC,QAAQ,MAAED,IACRD,EACJb,GACEqI,EAAAA,EAAAA,GACmB,kBAAVvH,EAAqBA,EAAM0H,MAAM,KAAO1H,GAElD,EAsBG2H,YAAc9E,GAAaA,EAAS+E,KAAK,MAAM/D,SAG9Cc,EAAOnC,KAAKxB,IACX2C,EAAAA,EAAAA,MAAC6B,EAAAA,EAAQ,CAAaxF,MAAOgB,EAAM6C,SAAA,EACjCN,EAAAA,EAAAA,KAACsE,EAAAA,EAAQ,CAACC,QAAS/G,EAAaoC,SAASnC,MACzCuC,EAAAA,EAAAA,KAACwE,EAAAA,EAAY,CAACC,QAAShH,MAFVA,SAMP,C,0GC1ClB,MAmCA,EAnCyC+B,IAA+B,IAA9B,OAAEyB,EAAM,aAAEC,GAAc1B,EAChE,MAAM7D,GAAWkI,EAAAA,EAAAA,MACXjF,GAAQ9C,EAAAA,EAAAA,KAAaC,GAAqBA,EAAM6C,MAAMA,QAU5D,OACEwB,EAAAA,EAAAA,MAACsB,EAAAA,EAAW,CAACF,GAAI,CAAEG,MAAO,SAAWpE,KAAK,QAAO+C,SAAA,EAC/CN,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,GAAG,cAAavB,SAAC,8BAC7BF,EAAAA,EAAAA,MAAC0B,EAAAA,EAAM,CACLC,QAAQ,cACRF,GAAG,eACHpF,MAAOmC,EACPlB,MAAM,SACNsE,SAhBoBtD,CAAClC,EAAkCmC,KAC3D,MAAMhB,EAAgBnB,EAAME,OAAOD,MACnCd,GAAS+I,EAAAA,EAAAA,GAAS/G,IACduD,GACFA,EAAa1E,EAAOmC,EACtB,EAWiC2B,SAAA,EAE7BN,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACxF,MAAM,GAAE6D,UAChBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,UAELW,EAAOhC,KAAKL,IACXoB,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAAaxF,MAAOmC,EAAM0B,SAChC1B,GADYA,UAKP,C,6HChClB,MAqCA,EArCuCY,IAAgB,IAAf,MAAEuB,GAAOvB,EAC/C,MAAM7D,GAAWkI,EAAAA,EAAAA,MACXvG,GAAcxB,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMwB,KAAKD,cAYjE,OACE8C,EAAAA,EAAAA,MAACsB,EAAAA,EAAW,CAACF,GAAI,CAAEG,MAAO,SAAWpE,KAAK,QAAO+C,SAAA,EAC/CN,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,GAAG,aAAYvB,SAAC,0CAC5BN,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CACLC,QAAQ,aACRF,GAAG,cACHoC,UAAQ,EACRxH,MAAOa,EACPI,MAAM,uCACNsE,SApBmB2C,CAACnI,EAAoCmC,KAC5D,MACEjC,QAAQ,MAAED,IACRD,EACJb,GACEiJ,EAAAA,EAAAA,GACmB,kBAAVnI,EAAqBA,EAAM0H,MAAM,KAAO1H,GAElD,EAaG2H,YAAc9E,GAAaA,EAAS+E,KAAK,MAAM/D,SAE9CS,EAAM9B,KAAK1B,IACV6C,EAAAA,EAAAA,MAAC6B,EAAAA,EAAQ,CAAYxF,MAAOc,EAAK+C,SAAA,EAC/BN,EAAAA,EAAAA,KAACsE,EAAAA,EAAQ,CAACC,QAASjH,EAAYsC,SAASrC,MACxCyC,EAAAA,EAAAA,KAACwE,EAAAA,EAAY,CAACC,QAASlH,MAFVA,SAMP,C,kCCtCX,MAAM3B,E,QAAoCiI,E","sources":["webpack://my-app/./src/pages/Clothing/Sweaters/Sweaters.module.css?024c","pages/Clothing/Sweaters/Sweaters.tsx","webpack://my-app/./src/pages/Footer/Footer.module.css?f417","pages/Footer/Footer.tsx","webpack://my-app/./src/shared/components/ProductsComponents/Card.module.css?25ba","shared/components/ProductsComponents/Card.tsx","webpack://my-app/./src/shared/components/ProductsComponents/Nav.module.css?e746","shared/components/ProductsComponents/Nav.tsx","shared/components/SelectBrand/SelectBrand.tsx","shared/components/SelectColors/SelectColors.tsx","shared/components/SelectSize/SelectSizes.tsx","shared/config/hooks.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"decksContainer\":\"Sweaters_decksContainer__b992l\",\"parametersContainer\":\"Sweaters_parametersContainer__N9eyU\",\"countAndNavigation\":\"Sweaters_countAndNavigation__lAUtA\",\"numberAndNavigation\":\"Sweaters_numberAndNavigation__1hRLY\",\"cardCount\":\"Sweaters_cardCount__h1-GF\",\"sortContainer\":\"Sweaters_sortContainer__7bdAl\",\"lowToHigh\":\"Sweaters_lowToHigh__1lnmV\",\"sortContainer1\":\"Sweaters_sortContainer1__-6dDK\",\"sortContainer2\":\"Sweaters_sortContainer2__otfUq\",\"sortAndNavigation\":\"Sweaters_sortAndNavigation__Euo8+\"};","import { ChangeEvent, useEffect, useState } from \"react\";\r\nimport s from \"./Sweaters.module.css\";\r\nimport Navigation from \"../../../shared/components/ProductsComponents/Nav\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../store/store\";\r\nimport {\r\n  setSortLabel,\r\n  sortByNewest,\r\n  sortByPriceHighToLow,\r\n  sortByPriceLowToHigh,\r\n  sortByTitleAZ,\r\n  sortByTitleZA,\r\n} from \"../../../shared/api/sortSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Footer } from \"../../Footer/Footer\";\r\nimport { Product } from \"../../../shared/config/types\";\r\nimport SelectColors from \"../../../shared/components/SelectColors/SelectColors\";\r\nimport SelectSizes from \"../../../shared/components/SelectSize/SelectSizes\";\r\nimport SelectBrand from \"../../../shared/components/SelectBrand/SelectBrand\";\r\nimport { fetchDataDecks } from \"../../../shared/api/decks/decksSlice\";\r\nimport Card from \"../../../shared/components/ProductsComponents/Card\";\r\nimport { Header } from \"../../../shared/components/Header/Header\";\r\nimport { useAppDispatch } from \"../../../shared/config/hooks\";\r\nimport Products from \"../../../shared/components/ProductsComponents/Products/Products\";\r\n\r\ntype SweatersType = {\r\n  category: string;\r\n  color: string;\r\n  company: string;\r\n  newPrice: string;\r\n  title: string;\r\n  img: string;\r\n  prevPrice: string;\r\n  size: string;\r\n  year: string;\r\n};\r\n\r\nfunction Sweaters() {\r\n  const dispatch = useAppDispatch();\r\n  const data = useSelector((state: RootState) => state.decks.data);\r\n  const status = useSelector((state: RootState) => state.decks.status);\r\n  const navigate = useNavigate(); // Получите функцию navigate\r\n  const sortedProducts = useSelector(\r\n    (state: RootState) => state.sort.sortedProducts\r\n  );\r\n\r\n  useEffect(() => {\r\n    setProducts(data);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setProducts(sortedProducts as Product[]);\r\n  }, [sortedProducts]);\r\n\r\n  const handleSelectChange = (event: any) => {\r\n    const value = event.target.value;\r\n    dispatch(setSortLabel(value));\r\n\r\n    if (value === \"По убыванию цены\") {\r\n      dispatch(sortByPriceHighToLow(data));\r\n    } else if (value === \"По возрастанию цены\") {\r\n      dispatch(sortByPriceLowToHigh(data));\r\n    } else if (value === \"От A до Z\") {\r\n      dispatch(sortByTitleAZ(data));\r\n    } else if (value === \"От Z до A\") {\r\n      dispatch(sortByTitleZA(data));\r\n    } else if (value === \"По новинкам\") {\r\n      dispatch(sortByNewest(data));\r\n    }\r\n  };\r\n\r\n  // Инициализация состояния\r\n  const [products, setProducts] = useState<Product[]>(data);\r\n\r\n  useEffect(() => {\r\n    if (status === \"idle\") {\r\n      dispatch(fetchDataDecks());\r\n    }\r\n  }, [status, dispatch]);\r\n  //Redux toolkit\r\n\r\n  // Обновление products при изменении data\r\n  useEffect(() => {\r\n    setProducts(data);\r\n  }, [data]);\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\r\n  const activeSizes = useSelector((state: RootState) => state.size.activeSizes);\r\n  const activeBrands = useSelector(\r\n    (state: RootState) => state.brand.activeBrands\r\n  );\r\n  const label = useSelector((state: RootState) => state.sort.label);\r\n  const [selectedColor, setSelectedColor] = useState(\"\");\r\n  const [cardCount, setCardCount] = useState(0); //показывает количество товаров\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value);\r\n  };\r\n  const filteredItems = products.filter(\r\n    (product) => product.title.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n  );\r\n\r\n  // фильтрация ЦВЕТА\r\n  const handleColorChange = (\r\n    event: SelectChangeEvent<string>,\r\n    child: React.ReactNode\r\n  ) => {\r\n    const color = event.target.value;\r\n    setSelectedColor(color); // Обновляем состояние выбранного цвета\r\n  };\r\n  // Создаются уникальные неповторяющиеся цвета с помощью new Set\r\n  const uniqueColors = Array.from(\r\n    new Set(data.map((product: SweatersType) => product.color))\r\n  ).sort();\r\n  const uniqueSizes = Array.from(\r\n    new Set(data.map((product: SweatersType) => product.size))\r\n  ).sort();\r\n  const uniqueBrands = Array.from(\r\n    new Set(data.map((product: SweatersType) => product.company))\r\n  ).sort();\r\n\r\n  const handleSearch = (query: string) => {\r\n    // Найдите продукт по заголовку\r\n    const foundProduct = products.find(\r\n      (product) => product.title.toLowerCase() === query.toLowerCase()\r\n    );\r\n\r\n    // Если продукт найден, переходите на его страницу\r\n    if (foundProduct) {\r\n      navigate(\r\n        `/card/${foundProduct.title}/${\r\n          foundProduct.newPrice\r\n        }/${encodeURIComponent(foundProduct.img)}/${foundProduct.company}/${\r\n          foundProduct.color\r\n        }/${foundProduct.size}`\r\n      );\r\n    } else {\r\n      alert(\"Продукт не найден\"); // Уведомление о том, что продукт не найден\r\n    }\r\n  };\r\n\r\n  function filteredData(\r\n    products: Product[],\r\n    selected: string | null,\r\n    query: string,\r\n    selectedColor: string // Добавляем параметр для выбранного цвета\r\n  ) {\r\n    let filteredProducts = products;\r\n\r\n    // Filtering Input Items\r\n    if (query) {\r\n      filteredProducts = filteredItems;\r\n    }\r\n\r\n    // Applying selected filter\r\n    if (selected) {\r\n      filteredProducts = filteredProducts.filter(\r\n        ({ category, color, company, newPrice, title }) =>\r\n          category === selected ||\r\n          color === selected ||\r\n          company === selected ||\r\n          newPrice === selected ||\r\n          title === selected\r\n      );\r\n    }\r\n\r\n    // Фильтрация по цвету\r\n    if (selectedColor) {\r\n      filteredProducts = filteredProducts.filter(\r\n        (product) => product.color === selectedColor\r\n      );\r\n    }\r\n\r\n    if (activeSizes.length > 0) {\r\n      filteredProducts = filteredProducts.filter((product) =>\r\n        activeSizes.includes(product.size)\r\n      );\r\n    }\r\n    if (activeBrands.length > 0) {\r\n      filteredProducts = filteredProducts.filter((product) =>\r\n        activeBrands.includes(product.company)\r\n      );\r\n    }\r\n\r\n    return filteredProducts.map(\r\n      ({\r\n        img,\r\n        title,\r\n        prevPrice,\r\n        newPrice,\r\n        size,\r\n        company,\r\n        color,\r\n      }) => (\r\n        <Card\r\n          key={`${title}-${newPrice}-${img}`}\r\n          img={img}\r\n          title={title}\r\n          prevPrice={prevPrice}\r\n          newPrice={newPrice}\r\n          size={size}\r\n          company={company}\r\n          color={color}\r\n        />\r\n      )\r\n    );\r\n  }\r\n\r\n  const result = filteredData(products, selectedCategory, query, selectedColor);\r\n\r\n  useEffect(() => {\r\n    if (result) {\r\n      setCardCount(result.length);\r\n    }\r\n  }, [result]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <div className={s.sweatersContainer}>\r\n        {isMobile ? (\r\n          <>\r\n            <div className={s.mobileCards}>\r\n              <div className={s.parametersContainer}>\r\n                <div className={s.sizeContainer}>\r\n                  <SelectSizes sizes={uniqueSizes} />\r\n                </div>\r\n                <SelectColors\r\n                  colors={uniqueColors}\r\n                  handleChange={handleColorChange}\r\n                />\r\n                <div className={s.sizeContainer}>\r\n                  <SelectBrand brands={uniqueBrands} />\r\n                </div>\r\n              </div>\r\n              <div className={s.numberAndNavigation}>\r\n                <div className={s.sortContainer}>\r\n                  <Box sx={{ minWidth: 120 }}>\r\n                    <FormControl sx={{ width: \"130px\" }} size=\"small\">\r\n                      <InputLabel id=\"demo-simple-select-label\">\r\n                        Сортировка\r\n                      </InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={label}\r\n                        label=\"Сортировка\"\r\n                        onChange={handleSelectChange}\r\n                      >\r\n                        <MenuItem value=\"По убыванию цены\">\r\n                          По убыванию цены\r\n                        </MenuItem>\r\n                        <MenuItem value=\"По возрастанию цены\">\r\n                          По возрастанию цены\r\n                        </MenuItem>\r\n                        <MenuItem value=\"От A до Z\">От A до Z</MenuItem>\r\n                        <MenuItem value=\"От Z до A\">От Z до A</MenuItem>\r\n                        <MenuItem value=\"По новинкам\">По новинкам</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </div>\r\n                <Navigation\r\n                  query={query}\r\n                  handleInputChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div className={s.cardCount}>{cardCount} товаров</div>\r\n              <Products result={result} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className={s.menuContainer}>\r\n            <div className={s.parametersContainer}>\r\n              <div className={s.sizeContainer}>\r\n                <SelectSizes sizes={uniqueSizes} />\r\n              </div>\r\n              <SelectColors colors={uniqueColors} handleChange={handleColorChange} />\r\n              <div className={s.sizeContainer}>\r\n                <SelectBrand brands={uniqueBrands} />\r\n              </div>\r\n              <div className={s.sortContainer}>\r\n                <Box>\r\n                  <FormControl sx={{ width: \"132px\" }} size=\"small\">\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Сортировка\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={label}\r\n                      label=\"Сортировка\"\r\n                      onChange={handleSelectChange}\r\n                    >\r\n                      <MenuItem value=\"По убыванию цены\">\r\n                        По убыванию цены\r\n                      </MenuItem>\r\n                      <MenuItem value=\"По возрастанию цены\">\r\n                        По возрастанию цены\r\n                      </MenuItem>\r\n                      <MenuItem value=\"От A до Z\">От A до Z</MenuItem>\r\n                      <MenuItem value=\"От Z до A\">От Z до A</MenuItem>\r\n                      <MenuItem value=\"По новинкам\">По новинкам</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className={s.countAndNavigation}>\r\n                <p className={s.cardCount}>{cardCount} товаров</p>\r\n                <Navigation\r\n                  query={query}\r\n                  handleInputChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <Products result={result} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sweaters;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"footerContainer\":\"Footer_footerContainer__jO6Wp\",\"infoText\":\"Footer_infoText__utR+1\",\"icon\":\"Footer_icon__gc2Fx\",\"films\":\"Footer_films__lghla\",\"copyright\":\"Footer_copyright__eg7nf\"};","import react from 'react'; \r\nimport s from './Footer.module.css'\r\n\r\nexport const Footer = () => {\r\n  \r\n\r\n    return <div className={s.footerContainer}>\r\n        <h3 className={s.infoText}>Info:</h3>\r\n        <a className={s.icon} href=\"https://www.instagram.com/plitka_dest.crew?igsh=MXA2cTd0ejdvdzFlaA==\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n          >\r\n            <path\r\n              d=\"M7.8 2.00002H16.2C19.4032 2.00002 22 4.59677 22 7.80002V16.2C22 19.4033 19.4032 22 16.2 22H7.8C4.59675 22 2 19.4033 2 16.2V7.80002C2 4.59677 4.59675 2.00002 7.8 2.00002ZM7.6 4C5.61177 4 4 5.61178 4 7.6V16.4C4 18.3882 5.61177 20 7.6 20H16.4C18.3882 20 20 18.3882 20 16.4V7.6C20 5.61178 18.3882 4 16.4 4H7.6ZM17.25 5.5C17.9404 5.5 18.5 6.05965 18.5 6.75C18.5 7.44036 17.9404 8 17.25 8C16.5596 8 16 7.44036 16 6.75C16 6.05965 16.5596 5.5 17.25 5.5ZM12 7C14.7614 7 17 9.23858 17 12C17 14.7614 14.7614 17 12 17C9.23857 17 7 14.7614 7 12C7 9.23858 9.23857 7 12 7ZM12 9C10.3431 9 9 10.3432 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3432 13.6569 9 12 9Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </a>\r\n        <a className={s.films} href={'https://youtu.be/BuxEPJ8bDXU?si=4CJHaZ_YzrBjw335'}>\r\n        <h2>Films</h2>\r\n        </a>\r\n        <h2>Пн—Вс 10:00—21:00 </h2>\r\n        \r\n        <h2>Т. +375 (29) 715 55 40</h2>\r\n        <div className={s.copyright}>Copyright © 2025 Plitka</div>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__Y4qGb\",\"card-img\":\"Card_card-img__NV1Ep\",\"card-title\":\"Card_card-title__8Ava3\",\"card-reviews\":\"Card_card-reviews__R2CQ9\",\"rating-star\":\"Card_rating-star__JOuow\",\"total-reviews\":\"Card_total-reviews__uggEY\",\"cardDetails\":\"Card_cardDetails__7-Xvs\",\"card-price\":\"Card_card-price__bPrEd\",\"price\":\"Card_price__eZt+b\",\"bag-icon\":\"Card_bag-icon__uRN8L\"};","import { BsFillBagFill } from \"react-icons/bs\";\nimport react, { FC } from \"react\";\nimport s from \"./Card.module.css\"\nimport { Link } from \"react-router-dom\";\n\ntype CardsPropsType = {\n  img: string,\n  title: string,\n  prevPrice: string,\n  newPrice: string,\n  size: string,\n  company:string,\n  color:string,\n}\n\nconst Card: FC<CardsPropsType> = ({ img, title, prevPrice, newPrice, company, color, size}) => {\n  return (<>\n    <Link to={`/card/${title}/${newPrice}/${encodeURIComponent(img)}/${company}/${color}/${size}`}>\n\n\n  <section className={s.card}>\n    <img src={img} alt={title} className={s.cardImg} />\n        <div className={s.cardDetails}>\n          <h3 className={s.cardTitle}>{title}</h3>\n          \n          <section className={s.cardPrice}>\n            <div className={s.price}>\n              <del>{prevPrice}</del> {newPrice}byn\n            </div>\n           \n          </section>\n        </div>\n      </section>\n      </Link>\n    </>\n  );\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"Nav_nav__qT5EO\",\"searchInput\":\"Nav_searchInput__ZwHcB\",\"navIcons\":\"Nav_navIcons__2YLz9\"};","\nimport { ChangeEvent, FC } from \"react\";\nimport s from \"./Nav.module.css\"\n\ntype NavPropsType = {\n  handleInputChange: (event: ChangeEvent<HTMLInputElement>) => void,\n  query: string,\n};\n\n\nconst Nav: FC<NavPropsType> = ({ handleInputChange, query }) => {\n  return (\n    <div className={s.nav}>\n      <div className={s.navContainer}>\n        <input\n          className={s.searchInput}\n          type=\"text\"\n          onChange={handleInputChange}\n          value={query}\n          placeholder=\"Поиск\"\n        />\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Nav;\n","import { FC, useEffect, useState } from \"react\";\r\nimport { Select, MenuItem, FormControl, InputLabel, SelectChangeEvent, Checkbox, ListItemText } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from \"../../../store/store\";\r\nimport { setActiveBrands } from './brandSlice';\r\n\r\ntype BrandsPropsType = {\r\n  brands: string[];\r\n}\r\n\r\nconst SelectBrand: FC<BrandsPropsType> = ({ brands  }) => {\r\n  const dispatch = useDispatch();\r\n  const activeBrands = useSelector((state: RootState) => state.brand.activeBrands) as string[];\r\n  const handleBrandChange = (event: SelectChangeEvent<string[]>, child: React.ReactNode) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    dispatch(\r\n      setActiveBrands(\r\n        typeof value === \"string\" ? value.split(\",\") : value\r\n      )\r\n    );\r\n  };\r\n\r\n  //Функция будет вызвана при размонтировании компонента и обнулит состояние выбранных брендов\r\n  const [isMounted, setIsMounted] = useState(true);\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsMounted(false);\r\n      dispatch(setActiveBrands([]));\r\n    };\r\n  }, [dispatch]); \r\n  \r\n  return (\r\n    <FormControl sx={{ width: '100px' }} size=\"small\">\r\n      <InputLabel id=\"brand-label\">Бренд</InputLabel>\r\n      <Select<string[]>\r\n        labelId=\"brand-label\"\r\n        id=\"brand-select\"\r\n        multiple\r\n        value={activeBrands}\r\n        label=\"Бренд\"\r\n        onChange={handleBrandChange}\r\n        renderValue={(selected) => selected.join(', ')}\r\n      >\r\n        \r\n        {brands.map((brand) => (\r\n          <MenuItem key={brand} value={brand}>\r\n            <Checkbox checked={activeBrands.includes(brand)} />\r\n            <ListItemText primary={brand} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectBrand;","import { FC } from \"react\";\nimport { Select, MenuItem, FormControl, InputLabel, SelectChangeEvent } from \"@mui/material\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setColor } from \"../../../store/colorSlice\";\nimport { RootState } from \"../../../store/store\";\n\ntype ColorPropsType = {\n  colors: string[];\n  handleChange?: (event: SelectChangeEvent<string>, child: React.ReactNode) => void;\n}\n\nconst SelectColors: FC<ColorPropsType> = ({ colors, handleChange }) => {\n  const dispatch = useDispatch();\n  const color = useSelector((state: RootState) => state.color.color);\n\n  const handleColorChange = (event: SelectChangeEvent<string>, child: React.ReactNode) => {\n    const selectedColor = event.target.value as string;\n    dispatch(setColor(selectedColor));\n    if (handleChange) {\n      handleChange(event, child); // Вызываем handleChange, чтобы передать выбранный цвет в родительский компонент\n    }\n  };\n  \n  return (\n    <FormControl sx={{ width: '100px' }} size=\"small\">\n      <InputLabel id=\"color-label\">Цвет</InputLabel>\n      <Select\n        labelId=\"color-label\"\n        id=\"color-select\"\n        value={color}\n        label=\"Colors\"\n        onChange={handleColorChange} // Обработчик onChange с двумя параметрами\n      >\n        <MenuItem value=\"\">\n          <em>All</em>\n        </MenuItem>\n        {colors.map((color) => (\n          <MenuItem key={color} value={color}>\n            {color}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default SelectColors;","import { FC } from \"react\";\r\nimport { Select, MenuItem, FormControl, InputLabel, SelectChangeEvent, Checkbox, ListItemText } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActiveSizes } from \"../../../store/sizeSlice\";\r\nimport { RootState } from \"../../../store/store\";\r\n\r\ntype SizePropsType = {\r\n  sizes: string[];\r\n}\r\n\r\nconst SelectSizes: FC<SizePropsType> = ({ sizes }) => {\r\n  const dispatch = useDispatch();\r\n  const activeSizes = useSelector((state: RootState) => state.size.activeSizes) as string[];\r\n  const handleSizeChange = (event: SelectChangeEvent<string[]>, child: React.ReactNode) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    dispatch(\r\n      setActiveSizes(\r\n        typeof value === \"string\" ? value.split(\",\") : value\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormControl sx={{ width: '100px' }} size=\"small\">\r\n      <InputLabel id=\"size-label\">Размер</InputLabel>\r\n      <Select<string[]>\r\n        labelId=\"size-label\"\r\n        id=\"size-select\"\r\n        multiple\r\n        value={activeSizes}\r\n        label=\"Размер\"\r\n        onChange={handleSizeChange}\r\n        renderValue={(selected) => selected.join(', ')}\r\n      >\r\n        {sizes.map((size) => (\r\n          <MenuItem key={size} value={size}>\r\n            <Checkbox checked={activeSizes.includes(size)} />\r\n            <ListItemText primary={size} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectSizes;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch, RootState } from '../../store/store';\r\n\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"names":["dispatch","useAppDispatch","data","useSelector","state","decks","status","sortedProducts","useNavigate","sort","useEffect","setProducts","handleSelectChange","event","value","target","setSortLabel","sortByPriceHighToLow","sortByPriceLowToHigh","sortByTitleAZ","sortByTitleZA","sortByNewest","products","useState","fetchDataDecks","selectedCategory","setSelectedCategory","activeSizes","size","activeBrands","brand","label","selectedColor","setSelectedColor","cardCount","setCardCount","isMobile","useMediaQuery","query","setQuery","handleInputChange","filteredItems","filter","product","title","toLowerCase","indexOf","handleColorChange","child","color","uniqueColors","Array","from","Set","map","uniqueSizes","uniqueBrands","company","result","selected","filteredProducts","_ref","category","newPrice","length","includes","_ref2","img","prevPrice","_jsx","Card","concat","filteredData","_jsxs","_Fragment","children","Header","className","s","sweatersContainer","mobileCards","parametersContainer","sizeContainer","SelectSizes","sizes","SelectColors","colors","handleChange","SelectBrand","brands","numberAndNavigation","sortContainer","Box","sx","minWidth","FormControl","width","InputLabel","id","Select","labelId","onChange","MenuItem","Navigation","Products","menuContainer","countAndNavigation","Footer","href","xmlns","height","viewBox","fill","d","Link","to","encodeURIComponent","card","src","alt","cardImg","cardDetails","cardTitle","cardPrice","price","nav","navContainer","searchInput","type","placeholder","useDispatch","isMounted","setIsMounted","setActiveBrands","multiple","handleBrandChange","split","renderValue","join","Checkbox","checked","ListItemText","primary","setColor","handleSizeChange","setActiveSizes"],"sourceRoot":""}